@startuml "Code Analysis Class Diagram"

' This diagram was automatically generated by the code analyzer

class "ModuleInfo" as code_analyzer_ModuleInfo {
  imports: set
  classes: list
  functions: list
}

class "CodeVisitor" as code_analyzer_CodeVisitor {
  class_name
  bases
  base_name
  old_class
  method_name
  full_name
  function_name
  old_function
  attr_name
  attr_name
  type_annotation
  type_annotation
  type_annotation
  imported_name
  as_name
  full_name
  obj_name
  method_name
  caller
  called
  +__init__(self, filename, module_name)
  +visit_ClassDef(self, node)
  +visit_FunctionDef(self, node)
  +visit_Assign(self, node)
  +visit_AnnAssign(self, node)
  +visit_Import(self, node)
  +visit_ImportFrom(self, node)
  +visit_Call(self, node)
  +_get_attribute_name(self, node)
}

class "InvalidPathError" as code_analyzer_InvalidPathError {
  +__init__(self, path)
}

class "NoFilesAnalyzedError" as code_analyzer_NoFilesAnalyzedError {
  +__init__(self)
}

class "analyze_file" as code_analyzer_analyze_file <<function>> {
  +analyze_file(file_path)
}

class "analyze_directory" as code_analyzer_analyze_directory <<function>> {
  +analyze_directory(directory, exclude_dirs)
}

class "_add_classes_to_diagram" as code_analyzer__add_classes_to_diagram <<function>> {
  +_add_classes_to_diagram(visitors, diagram)
}

class "_add_functions_to_diagram" as code_analyzer__add_functions_to_diagram <<function>> {
  +_add_functions_to_diagram(visitors, diagram)
}

class "_add_relationships_to_diagram" as code_analyzer__add_relationships_to_diagram <<function>> {
  +_add_relationships_to_diagram(visitors, diagram, include_functions)
}

class "generate_class_diagram" as code_analyzer_generate_class_diagram <<function>> {
  +generate_class_diagram(visitors, include_functions)
}

class "generate_module_diagram" as code_analyzer_generate_module_diagram <<function>> {
  +generate_module_diagram(visitors)
}

class "save_diagram" as code_analyzer_save_diagram <<function>> {
  +save_diagram(diagram, output_file)
}

class "analyze_and_generate_diagram" as code_analyzer_analyze_and_generate_diagram <<function>> {
  +analyze_and_generate_diagram(path, output, modules, functions)
}

code_analyzer_ModuleInfo --|> typing_TypedDict
code_analyzer_CodeVisitor --|> ast_NodeVisitor
code_analyzer_InvalidPathError --|> ValueError
code_analyzer_NoFilesAnalyzedError --|> ValueError
code_analyzer_CodeVisitor_visit_ClassDef ..> ast_get_docstring : calls
code_analyzer_CodeVisitor_visit_FunctionDef ..> ast_get_docstring : calls
code_analyzer_analyze_file ..> ast_parse : calls
code_analyzer_analyze_directory ..> os_walk : calls

@enduml