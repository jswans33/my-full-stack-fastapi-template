@startuml
skinparam classAttributeIconSize 0

package "logging" {
  class Functions <<(F,orange)>> {
    +setup_logging(config: LogConfig | None = None, test_handler: logging.Handler | None = None) -> None
    +get_logger(name: str) -> logging.Logger
  }
  class LogLevel {
    +DEBUG: str
    +INFO: str
    +WARNING: str
    +ERROR: str
    +CRITICAL: str
  }
  class LogFormat {
    +TEXT: str
    +JSON: str
  }
  class LogConfig {
    +level: LogLevel
    +format: LogFormat
    +file: str | None
    +rotation: bool
    +rotation_size: int
    +rotation_backups: int
    +@classmethod from_env(cls: Any) -> LogConfig
  }
  class JsonFormatter {
    +format(self: Any, record: logging.LogRecord) -> str
  }
  class LoggingMiddleware {
    +async dispatch(self: Any, request: Request, call_next: RequestResponseEndpoint) -> Response
  }
}

' Relationships
str <|-- "logging".LogLevel
Enum <|-- "logging".LogLevel
str <|-- "logging".LogFormat
Enum <|-- "logging".LogFormat
BaseModel <|-- "logging".LogConfig
LogConfig --> LogLevel
LogConfig --> LogFormat
logging.Formatter <|-- "logging".JsonFormatter
BaseHTTPMiddleware <|-- "logging".LoggingMiddleware
@enduml