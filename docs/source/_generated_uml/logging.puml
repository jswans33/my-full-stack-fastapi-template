@startuml
skinparam classAttributeIconSize 0

package "logging" {
  class Functions <<(F,orange)>> {
    Visibility.PUBLIC setup_logging(config: LogConfig | None = None, test_handler: logging.Handler | None = None) -> None
    Visibility.PUBLIC get_logger(name: str) -> logging.Logger
  }
  class LogLevel {
    Visibility.PUBLIC DEBUG: Any
    Visibility.PUBLIC INFO: Any
    Visibility.PUBLIC WARNING: Any
    Visibility.PUBLIC ERROR: Any
    Visibility.PUBLIC CRITICAL: Any
  }
  class LogFormat {
    Visibility.PUBLIC TEXT: Any
    Visibility.PUBLIC JSON: Any
  }
  class LogConfig {
    Visibility.PUBLIC level: LogLevel
    Visibility.PUBLIC format: LogFormat
    Visibility.PUBLIC file: str | None
    Visibility.PUBLIC rotation: bool
    Visibility.PUBLIC rotation_size: int
    Visibility.PUBLIC rotation_backups: int
    Visibility.PUBLICfrom_env(cls: Any) -> LogConfig
  }
  class JsonFormatter {
    Visibility.PUBLICformat(record: logging.LogRecord) -> str
  }
  class LoggingMiddleware {
  }
}

' Relationships
str <|-- "logging".LogLevel
Enum <|-- "logging".LogLevel
str <|-- "logging".LogFormat
Enum <|-- "logging".LogFormat
BaseModel <|-- "logging".LogConfig
LogConfig --> LogLevel
LogConfig --> LogFormat
BaseHTTPMiddleware <|-- "logging".LoggingMiddleware
@enduml