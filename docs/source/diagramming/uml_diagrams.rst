UML Diagrams
===========

Class Diagrams
-------------

The UML generator creates class diagrams for Python code, showing classes, methods, attributes and relationships.

.. uml:: ../_generated_uml/all.puml

UML Generator Structure
---------------------

The UML generator tool itself is analyzed and visualized:

.. uml:: ../_generated_uml/uml_generator/models.puml

.. uml:: ../_generated_uml/uml_generator/generator/plantuml_generator.puml

Sequence Diagrams
----------------

Two approaches are available for creating sequence diagrams: static code analysis and YAML definitions.

User Creation Flow (Code Analysis)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. uml:: ../_generated_uml/sequence/create_user.puml

This sequence diagram was generated by analyzing the user creation code in the backend app.

User Delete Account Flow (Code Analysis)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. uml:: ../_generated_uml/sequence/user_delete_account.puml

This sequence diagram shows the flow when a user deletes their account.

Authentication Flow (YAML Definition)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. uml:: ../_generated_uml/sequence/auth_flow.puml

This sequence diagram was created from a YAML definition file.

Creating Sequence Diagrams
~~~~~~~~~~~~~~~~~~~~~~~~~

Sequence diagrams show interactions between objects over time, with messages passed between participants.

**Method 1: Using Static Code Analysis**

Extract sequence diagrams directly from Python code:

.. code-block:: bash

    # Generate a sequence diagram from a Python codebase
    python -m utils.extract_sequence --dir path/to/code --class ClassName --method methodName --output diagram.puml

The sequence extractor analyzes the code and extracts method calls to create a sequence diagram.

**Method 2: Using YAML Definition Files**

For more control over the diagram or when code isn't available:

1. Create a YAML definition file in the examples/sequence_diagrams/ directory
2. Run the UML generator: ``python -m utils.run_uml_generator``
3. Or use the direct CLI command: ``python -m utils.uml_generator.cli generate-sequence -f examples/sequence_diagrams/your_file.yaml -o output.puml``

Example YAML format:

.. code-block:: yaml

    title: User Authentication Flow
    participants:
      - name: User
        type: actor
      - name: AuthController
        type: boundary
      - name: UserService
        type: control
    items:
      - type: message
        from: User
        to: AuthController
        text: "login(credentials)"
      - type: message
        from: AuthController
        to: UserService
        text: "authenticate(username, password)"

Viewing Sequence Diagrams
~~~~~~~~~~~~~~~~~~~~~~~

To view all sequence diagrams and build the documentation:

.. code-block:: bash

    # Single command to generate diagrams and build docs
    make sequence-docs