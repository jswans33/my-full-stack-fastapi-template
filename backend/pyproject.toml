[project]
name = "app"
version = "0.1.0"
description = ""
requires-python = ">=3.10,<4.0"
dependencies = [
    "fastapi[standard]<1.0.0,>=0.114.2",
    "python-multipart<1.0.0,>=0.0.7",
    "email-validator<3.0.0.0,>=2.1.0.post1",
    "passlib[bcrypt]<2.0.0,>=1.7.4",
    "tenacity<9.0.0,>=8.2.3",
    "pydantic>2.0",
    "emails<1.0,>=0.6",
    "jinja2<4.0.0,>=3.1.4",
    "alembic<2.0.0,>=1.12.1",
    "httpx<1.0.0,>=0.25.1",
    "psycopg[binary]<4.0.0,>=3.1.13",
    "sqlmodel<1.0.0,>=0.0.21",
    # Pin bcrypt until passlib supports the latest
    "bcrypt==4.0.1",
    "pydantic-settings<3.0.0,>=2.2.1",
    "sentry-sdk[fastapi]<2.0.0,>=1.40.6",
    "pyjwt<3.0.0,>=2.8.0",
]

[tool.uv]
dev-dependencies = [
    "pytest<8.0.0,>=7.4.3",
    "mypy<2.0.0,>=1.8.0",
    "ruff<1.0.0,>=0.2.2",
    "pre-commit<4.0.0,>=3.6.2",
    "types-passlib<2.0.0.0,>=1.7.7.20240106",
    "coverage<8.0.0,>=7.4.3",
    "sphinx==7.2.6",
    "sphinx-rtd-theme==2.0.0",
    "myst-parser==2.0.0",
    "sphinxcontrib-mermaid==0.9.2",
    "sphinxcontrib-plantuml==0.29",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]

[tool.ruff]
# Target Python version
target-version = "py310"
# Exclude directories
exclude = [
    "alembic",
    ".venv",
    "venv",
    "__pycache__",
    ".git",
    ".mypy_cache",
    ".ruff_cache",
]
# Line length to match Black's default
line-length = 88

# Enable Ruff's formatter (replacement for Black)
[tool.ruff.format]
# Use double quotes for consistency
quote-style = "double"
# Indent with 4 spaces
indent-style = "space"
# Line ending style
line-ending = "auto"
# Skip magic trailing comma
skip-magic-trailing-comma = false

[tool.ruff.lint]
# Enable all recommended rules + additional ones to replace Flake8, isort, etc.
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "N",    # pep8-naming
    "COM",  # flake8-commas
    "C90",  # mccabe complexity
    "T20",  # flake8-print
    "PT",   # flake8-pytest-style
    "RET",  # flake8-return
    "SIM",  # flake8-simplify
    "ARG",  # flake8-unused-arguments
    "ERA",  # eradicate (commented out code)
    "PL",   # pylint
    "TRY",  # tryceratops
    "RUF",  # ruff-specific rules
]
# Rules to ignore
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
    "PLR0913",  # Too many arguments to function call
    "PLR2004",  # Magic value used in comparison
]

# Autofix behavior
fixable = ["ALL"]
unfixable = []

# Maximum McCabe complexity allowed
[tool.ruff.lint.mccabe]
max-complexity = 10

# isort configuration
[tool.ruff.lint.isort]
known-first-party = ["app"]
known-third-party = ["fastapi", "pydantic", "sqlmodel"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

# Per-file ignores
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Unused imports
"tests/**/*.py" = ["PLR2004", "S101"]  # Magic values and assert statements in tests
